name: "medical"

x-lockdown: &lockdown
  # prevents write access to the image itself
  read_only: true
  # prevents any process within the container to gain more privileges
  security_opt:
    - "no-new-privileges=true"

services:
  postgres:
    # for more information about this image checkout:
    # https://github.com/11notes/docker-postgres
    image: "11notes/postgres:16"
    <<: *lockdown
    environment:
      TZ: "Europe/Zurich"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_BACKUP_SCHEDULE: "0 3 * * *"
    networks:
      backend:
    volumes:
      - "postgres.etc:/postgres/etc"
      - "postgres.var:/postgres/var"
      - "postgres.backup:/postgres/backup"
    tmpfs:
      - "/postgres/run:uid=1000,gid=1000"
      - "/postgres/log:uid=1000,gid=1000"
    restart: "always"

  pmrk:
    depends_on:
      postgres:
        condition: "service_healthy"
        restart: true
    image: "11notes/personal-medical-records-keeper:0.29.0"
    <<: *lockdown
    environment:
      TZ: "Europe/Zurich"
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
    ports:
      - "3000:8080/tcp"
    networks:
      frontend:
      backend:
    volumes:
      - "pmrk.var:/pmrk/var"
      - "pmrk.backup:/pmrk/backup"
    tmpfs:
      - "/pmrk/log:uid=1000,gid=1000"
    restart: "always"

volumes:
  postgres.etc:
  postgres.var:
  postgres.backup:
  pmrk.var:
  pmrk.backup:

networks:
  frontend:
  backend:
    internal: true